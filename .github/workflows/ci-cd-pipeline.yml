name: 🚀 Simple CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  DOCKER_USERNAME: spmani99
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: lugx-gaming-cluster

jobs:
  # 🧪 Test
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, game-service, order-service]
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.service }}/package-lock.json
        
    - name: 📦 Install & Test
      run: |
        cd ${{ matrix.service }}
        npm ci || npm install
        npm test

  # 🏗️ Build & Push
  build:
    name: 🏗️ Build & Push
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [frontend, game-service, order-service, analytics-service]
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: 🏗️ Build & Push
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  # 🚀 Deploy
  deploy:
    name: 🚀 Deploy to EKS
    runs-on: ubuntu-latest
    needs: build
    environment: production
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🔐 Setup AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: false
        
    - name: 🔍 Verify AWS Identity
      run: |
        echo "Testing AWS credentials..."
        aws sts get-caller-identity
        echo "Testing EKS access..."
        aws eks describe-cluster --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
        
    - name: 🔗 Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: 🚀 Deploy
      run: |
        echo "📡 Updating kubeconfig..."
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
        
        echo "🔍 Verifying kubectl connectivity..."
        kubectl cluster-info
        kubectl get nodes
        
        echo "📋 Applying Kubernetes manifests..."
        kubectl apply -f k8s/ --validate=true --dry-run=client
        kubectl apply -f k8s/
        
        echo "🔍 Checking deployment status..."
        kubectl get pods -A
        kubectl get services -A
        
        echo "✅ Deployed successfully!"